stream API
	- feature of Java 8
	- the stream API is a functional-style way of defining operations on a stream
	  of elements
	- streams allow you to define operations that don't modify the input data and
	  are not executed until you tell all of them to
	- streams do not store data, they only do work on it and return new data from
	  that. basically they are generally used for filtering/analysis
	- you can combine operations then execute them all together
	- built in streams are in the java.util.stream package
	- two types of streams
		- intermediate operations: return a new stream and do not execute
		  until a terminal operation is called
		- terminal operations: trigger the execution of intermediate operations
		  to return the final data


p1 = p1.replace(" ", "").toLowerCase();
p2 = p2.replace(" ", "").toLowerCase();

if (p1.length() != p2.length()) return false;

for (char ch1 : p1.toCharArray()) {
	for (char ch2 : p2.toCharArray()) {
		if (ch1==ch2) {
			p1 = p1.replaceFirst(ch1 + "", "");
			p2 = p2.replaceFirst(ch1 + "", "");
			break;
		}
	}
}

if ("".equals(p1) && "".equals(p2)) return true;
return false;