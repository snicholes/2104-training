HTTP
	- hypertext transfer protocol: a client-server protocol
		- client to server = front-end to back-end
		- client initiates the communication
	- follows a request-response format, sort of like sending a letter
	  then receiving one back.
	- http requests consist of:
		- verb: what HTTP method is being used
		- URI: the endpoint of the requested resource
		- HTTP version
		- request header: metadata
		- request body: message content
	- http responses consist of:
		- status code
		- http version
		- response header: metadata
		- response body: message content
	- http methods (verbs)
		- GET: used for retrieving a resource or set of resources.
		  request body is empty.
		- POST: sends an entity for the server to accept, usually
		  used for creating/adding resources (a POST request in a
		  RESTful application should be sent to the URI of a
		  collection, e.g. "/collection" with no identifier), often
		  also used for logging in
		- PUT: sends an entity for the server to accept, usually
		  used for updating resources (a PUT request in a RESTful
		  application should be sent to the URI of the specific
		  entity being changed, e.g. "/collection/identifier")
		- DELETE: specifies an entity to be deleted (URI pattern
		  should be same as PUT), often also used for logging out
		- OPTIONS: sent by the browser, checks which verbs are
		  allowed on the specified endpoint before actual request
		  is sent there
	- idempotence: if a function is idempotent, you can repeat it over
	  and over with exactly the same results
		- GET, PUT, and DELETE are idempotent: the results after
		  performing the method will be the same if you repeat it
		- POST is not idempotent
	- status codes
		- 100s: informational
		- 200s: success
			- 201: created
		- 300s: redirect
		- 400s: client error
			- 400: bad request
			- 401: unauthorized (must be logged in)
			- 403: forbidden (cannot access even if logged in)
			- 404: not found
			- 405: method not allowed
			- 418: i'm a teapot (cannot brew coffee)
		- 500s: server error
			- 500: internal server error
			- 503: service unavailable (usually for maintenance)